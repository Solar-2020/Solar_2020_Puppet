<% @go_backend_envs.each do |env| -%>
upstream <%= env['upstream'] %> {
    server 127.0.0.1:<%= env['port'] %>;
}
<% end -%>

server {
    listen 80;
    server_name  ~^(?<name>.+)\.example\.com$;
    return 301 https://$host$request_uri;
}

server {
    # nl-mail.ru or first-level subdomains
    server_name ~^(?<branch>\w*)\.?<%= @hostname_re %>$;

    location /api/ {
        rewrite /api/(.*) /$1 break;
        proxy_cookie_domain $go_upstream $host;
        proxy_set_header   Host             $host;
        proxy_set_header   X-Real-IP        $remote_addr;
        proxy_pass http://$go_upstream;     # из-за переменной в proxy_pass путь не заменяется автоматически
        # proxy_pass http://go_dev/api/;      # без переменной можно не использовать rewrite
    }

    location /storage/ {
        root /usr/share/nginx/;
        try_files $uri $uri/ =404;
    }

    location / {
        # include /etc/nginx/cors.conf;
        root /usr/share/nginx/html/$branch;
        index index.html;
        try_files $uri $uri/ /index.html =404;
    }

    listen 443 ssl http2;
    # для nic.ru: cat www_nl-mail.ru... intermediate root >> bundle; 
    # Затем разделить концы-начала ключей на разные строки.
    ssl_certificate /etc/ssl/nl-mail.bundle.crt;
    ssl_certificate_key /etc/ssl/nl-mail.private.key;
    ssl_prefer_server_ciphers On;
    ssl_protocols TLSv1.1 TLSv1.2;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK;
    add_header Strict-Transport-Security max-age=15768000;
    ssl_stapling on;
}